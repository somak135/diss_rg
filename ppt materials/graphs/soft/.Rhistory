E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
#dev.new()
png(filename = paste0(i,"1", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
########################################## then join edge
nontaboo = setdiff(c(1:(i-1)), taboo)
prob_vec = rowSums(adjmat[nontaboo, nontaboo])/sum(rowSums(adjmat[nontaboo, nontaboo]))
jointo = sample(nontaboo, size = 1, prob = prob_vec)
adjmat[i, jointo] = 1
adjmat[jointo, i] = 1
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
png(filename = paste0(i,"2", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
}
N = 15
p = 0.2
mode = "soft"
seed = 2
set.seed(seed)
adjmat = matrix(0, nrow = 2, ncol = 2)
adjmat[1,2] = 1
adjmat[2,1] = 1
g1 = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g1)$color = "black"
V(g1)$color = "orange"
#dev.new()
png(filename = "1.png")
plot(g1, layout = layout_in_circle)
dev.off()
for(i in 3:N) {
adjmat = append_zero(adjmat)
if(mode == "hard") {
taboo = hardcore(adjmat, (i-1), p)
}
if(mode == "soft") {
taboo = softcore(adjmat, (i-1), p)
}
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
#dev.new()
png(filename = paste0(i,"1", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
########################################## then join edge
nontaboo = setdiff(c(1:(i-1)), taboo)
prob_vec = rowSums(adjmat[nontaboo, nontaboo])/sum(rowSums(adjmat[nontaboo, nontaboo]))
jointo = sample(nontaboo, size = 1, prob = prob_vec)
adjmat[i, jointo] = 1
adjmat[jointo, i] = 1
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
png(filename = paste0(i,"2", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
}
N = 20
p = 0.3
mode = "soft"
set.seed(seed)
adjmat = matrix(0, nrow = 2, ncol = 2)
adjmat[1,2] = 1
adjmat[2,1] = 1
g1 = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g1)$color = "black"
V(g1)$color = "orange"
#dev.new()
png(filename = "1.png")
plot(g1, layout = layout_in_circle)
dev.off()
for(i in 3:N) {
adjmat = append_zero(adjmat)
if(mode == "hard") {
taboo = hardcore(adjmat, (i-1), p)
}
if(mode == "soft") {
taboo = softcore(adjmat, (i-1), p)
}
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
#dev.new()
png(filename = paste0(i,"1", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
########################################## then join edge
nontaboo = setdiff(c(1:(i-1)), taboo)
prob_vec = rowSums(adjmat[nontaboo, nontaboo])/sum(rowSums(adjmat[nontaboo, nontaboo]))
jointo = sample(nontaboo, size = 1, prob = prob_vec)
adjmat[i, jointo] = 1
adjmat[jointo, i] = 1
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
png(filename = paste0(i,"2", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
}
floor(13*.3)
N = 20
p = 0.3
mode = "soft"
see
seed
N = 13
set.seed(seed)
adjmat = matrix(0, nrow = 2, ncol = 2)
adjmat[1,2] = 1
adjmat[2,1] = 1
g1 = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g1)$color = "black"
V(g1)$color = "orange"
#dev.new()
png(filename = "1.png")
plot(g1, layout = layout_in_circle)
dev.off()
for(i in 3:N) {
adjmat = append_zero(adjmat)
if(mode == "hard") {
taboo = hardcore(adjmat, (i-1), p)
}
if(mode == "soft") {
taboo = softcore(adjmat, (i-1), p)
}
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
#dev.new()
png(filename = paste0(i,"1", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
########################################## then join edge
nontaboo = setdiff(c(1:(i-1)), taboo)
prob_vec = rowSums(adjmat[nontaboo, nontaboo])/sum(rowSums(adjmat[nontaboo, nontaboo]))
jointo = sample(nontaboo, size = 1, prob = prob_vec)
adjmat[i, jointo] = 1
adjmat[jointo, i] = 1
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
png(filename = paste0(i,"2", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
}
N=13
mode = "soft"
set.seed(seed)
adjmat = matrix(0, nrow = 2, ncol = 2)
adjmat[1,2] = 1
adjmat[2,1] = 1
g1 = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g1)$color = "black"
V(g1)$color = "orange"
#dev.new()
png(filename = "1.png")
plot(g1, layout = layout_in_circle)
dev.off()
for(i in 3:N) {
adjmat = append_zero(adjmat)
if(mode == "hard") {
taboo = hardcore(adjmat, (i-1), p)
}
if(mode == "soft") {
taboo = softcore(adjmat, (i-1), p)
}
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
#dev.new()
png(filename = paste0(i,"1", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
########################################## then join edge
nontaboo = setdiff(c(1:(i-1)), taboo)
prob_vec = rowSums(adjmat[nontaboo, nontaboo])/sum(rowSums(adjmat[nontaboo, nontaboo]))
jointo = sample(nontaboo, size = 1, prob = prob_vec)
adjmat[i, jointo] = 1
adjmat[jointo, i] = 1
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
png(filename = paste0(i,"2", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
}
softcore(adjmat, 13, .3)
n=13
taboo_num = floor(n*p)
taboo_num
degree_seq = rowSums(M)[1:n]
M = adjmat
degree_seq = rowSums(M)[1:n]
degree_seq
prob_vec = degree_seq/sum(degree_seq)
prob_vec
taboo = sample(c(1:n), size = taboo_num, replace = FALSE, prob = prob_vec)
taboo
taboo = match(taboo, degree_seq)
taboo
hardcore = function(M, n, p) {
taboo_num = floor(n*p)
degree_seq = rowSums(M)[1:n]
taboo = tail(sort(degree_seq, index.return = TRUE)$ix, taboo_num)
return(taboo)
}
softcore = function(M, n, p) {
taboo_num = floor(n*p)
degree_seq = rowSums(M)[1:n]
prob_vec = degree_seq/sum(degree_seq)
taboo = sample(c(1:n), size = taboo_num, replace = FALSE, prob = prob_vec)
#taboo = match(taboo, degree_seq)
return(taboo)
}
taboo_num = floor(n*p)
taboo_num
degree_seq = rowSums(M)[1:n]
degree_seq
taboo = tail(sort(degree_seq, index.return = TRUE)$ix, taboo_num)
taboo
fun = function(N, p, mode, seed) {
set.seed(seed)
adjmat = matrix(0, nrow = 2, ncol = 2)
adjmat[1,2] = 1
adjmat[2,1] = 1
g1 = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g1)$color = "black"
V(g1)$color = "orange"
#dev.new()
png(filename = "1.png")
plot(g1, layout = layout_in_circle)
dev.off()
for(i in 3:N) {
adjmat = append_zero(adjmat)
if(mode == "hard") {
taboo = hardcore(adjmat, (i-1), p)
}
if(mode == "soft") {
taboo = softcore(adjmat, (i-1), p)
}
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
#dev.new()
png(filename = paste0(i,"1", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
########################################## then join edge
nontaboo = setdiff(c(1:(i-1)), taboo)
prob_vec = rowSums(adjmat[nontaboo, nontaboo])/sum(rowSums(adjmat[nontaboo, nontaboo]))
jointo = sample(nontaboo, size = 1, prob = prob_vec)
adjmat[i, jointo] = 1
adjmat[jointo, i] = 1
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
png(filename = paste0(i,"2", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
}
}
fun(15, p = 0.2, mode = "hard", seed = 1)
fun(25, p = 0.2, mode = "hard", seed = 1)
fun = function(N, p, mode, seed) {
set.seed(seed)
adjmat = matrix(0, nrow = 2, ncol = 2)
adjmat[1,2] = 1
adjmat[2,1] = 1
g1 = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g1)$color = "black"
V(g1)$color = "orange"
#dev.new()
png(filename = "1.png", res = 400)
plot(g1, layout = layout_in_circle)
dev.off()
for(i in 3:N) {
adjmat = append_zero(adjmat)
if(mode == "hard") {
taboo = hardcore(adjmat, (i-1), p)
}
if(mode == "soft") {
taboo = softcore(adjmat, (i-1), p)
}
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
#dev.new()
png(filename = paste0(i,"1", ".png"), res = 400)
plot(g, layout = layout_in_circle)
dev.off()
########################################## then join edge
nontaboo = setdiff(c(1:(i-1)), taboo)
prob_vec = rowSums(adjmat[nontaboo, nontaboo])/sum(rowSums(adjmat[nontaboo, nontaboo]))
jointo = sample(nontaboo, size = 1, prob = prob_vec)
adjmat[i, jointo] = 1
adjmat[jointo, i] = 1
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
png(filename = paste0(i,"2", ".png"), res = 400)
plot(g, layout = layout_in_circle)
dev.off()
}
}
fun(25, p = 0.2, mode = "hard", seed = 1)
fun = function(N, p, mode, seed) {
set.seed(seed)
adjmat = matrix(0, nrow = 2, ncol = 2)
adjmat[1,2] = 1
adjmat[2,1] = 1
g1 = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g1)$color = "black"
V(g1)$color = "orange"
#dev.new()
png(filename = "1.png", res = 200)
plot(g1, layout = layout_in_circle)
dev.off()
for(i in 3:N) {
adjmat = append_zero(adjmat)
if(mode == "hard") {
taboo = hardcore(adjmat, (i-1), p)
}
if(mode == "soft") {
taboo = softcore(adjmat, (i-1), p)
}
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
#dev.new()
png(filename = paste0(i,"1", ".png"), res = 200)
plot(g, layout = layout_in_circle)
dev.off()
########################################## then join edge
nontaboo = setdiff(c(1:(i-1)), taboo)
prob_vec = rowSums(adjmat[nontaboo, nontaboo])/sum(rowSums(adjmat[nontaboo, nontaboo]))
jointo = sample(nontaboo, size = 1, prob = prob_vec)
adjmat[i, jointo] = 1
adjmat[jointo, i] = 1
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
png(filename = paste0(i,"2", ".png"), res = 200)
plot(g, layout = layout_in_circle)
dev.off()
}
}
fun(25, p = 0.2, mode = "hard", seed = 1)
v = c(1,2); x = c(3,10)
plot(v,v1)
plot(v,x)
png("x.png", dpi = 300)
fun = function(N, p, mode, seed) {
set.seed(seed)
adjmat = matrix(0, nrow = 2, ncol = 2)
adjmat[1,2] = 1
adjmat[2,1] = 1
g1 = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g1)$color = "black"
V(g1)$color = "orange"
#dev.new()
png(filename = "1.png", width = 1200, height = 1200)
plot(g1, layout = layout_in_circle)
dev.off()
for(i in 3:N) {
adjmat = append_zero(adjmat)
if(mode == "hard") {
taboo = hardcore(adjmat, (i-1), p)
}
if(mode == "soft") {
taboo = softcore(adjmat, (i-1), p)
}
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
#dev.new()
png(filename = paste0(i,"1", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
########################################## then join edge
nontaboo = setdiff(c(1:(i-1)), taboo)
prob_vec = rowSums(adjmat[nontaboo, nontaboo])/sum(rowSums(adjmat[nontaboo, nontaboo]))
jointo = sample(nontaboo, size = 1, prob = prob_vec)
adjmat[i, jointo] = 1
adjmat[jointo, i] = 1
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
png(filename = paste0(i,"2", ".png"))
plot(g, layout = layout_in_circle)
dev.off()
}
}
fun(25, p = 0.2, mode = "hard", seed = 1)
fun = function(N, p, mode, seed) {
set.seed(seed)
adjmat = matrix(0, nrow = 2, ncol = 2)
adjmat[1,2] = 1
adjmat[2,1] = 1
g1 = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g1)$color = "black"
V(g1)$color = "orange"
#dev.new()
png(filename = "1.png", width = 1200, height = 1200)
plot(g1, layout = layout_in_circle)
dev.off()
for(i in 3:N) {
adjmat = append_zero(adjmat)
if(mode == "hard") {
taboo = hardcore(adjmat, (i-1), p)
}
if(mode == "soft") {
taboo = softcore(adjmat, (i-1), p)
}
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
#dev.new()
png(filename = paste0(i,"1", ".png"), width = 1200, height = 1200)
plot(g, layout = layout_in_circle)
dev.off()
########################################## then join edge
nontaboo = setdiff(c(1:(i-1)), taboo)
prob_vec = rowSums(adjmat[nontaboo, nontaboo])/sum(rowSums(adjmat[nontaboo, nontaboo]))
jointo = sample(nontaboo, size = 1, prob = prob_vec)
adjmat[i, jointo] = 1
adjmat[jointo, i] = 1
g = graph_from_adjacency_matrix(adjmat, mode = "undirected", add.colnames = NA,
add.rownames = NA)
E(g)$color = "black"
V(g)$color = "orange"
V(g)$color[taboo] = "red"
V(g)$color[i] = "green"
png(filename = paste0(i,"2", ".png"), width = 1200, height = 1200)
plot(g, layout = layout_in_circle)
dev.off()
}
}
fun(25, p = 0.2, mode = "hard", seed = 1)
setwd("~/Desktop/graphs/hard")
fun(15, p = 0.2, mode = "hard", seed = 1)
setwd("~/Desktop/graphs/soft")
fun(15, p = 0.2, mode = "soft", seed = 1)
